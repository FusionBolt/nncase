/* This file is generated by tools/stackvm_gen/IsaGen at 2022/5/27 下午3:58:52 +08:00.
 *
 * Copyright 2019-2021 Canaan Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <nncase/kernels/stackvm/tensor_ops.h>

using namespace nncase;
using namespace nncase::kernels;
using namespace nncase::kernels::stackvm;
using namespace nncase::runtime;
using namespace nncase::runtime::stackvm;

result<tensor> nncase::kernels::stackvm::batch_normalization([[maybe_unused]] tensor input, [[maybe_unused]] tensor scale, [[maybe_unused]] tensor bias, [[maybe_unused]] tensor input_mean, [[maybe_unused]] tensor input_var, [[maybe_unused]] tensor epsilon, [[maybe_unused]] tensor momentum, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::batch_to_space([[maybe_unused]] tensor input, [[maybe_unused]] tensor block_shape, [[maybe_unused]] tensor crops, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::broadcast([[maybe_unused]] tensor input, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::cast([[maybe_unused]] typecode_t new_type, [[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::celu([[maybe_unused]] tensor input, [[maybe_unused]] tensor alpha, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::clamp([[maybe_unused]] tensor input, [[maybe_unused]] tensor min, [[maybe_unused]] tensor max, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::compare([[maybe_unused]] compare_op_t compare_op, [[maybe_unused]] tensor lhs, [[maybe_unused]] tensor rhs, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::concat([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::conv2d([[maybe_unused]] pad_mode_t pad_mode, [[maybe_unused]] tensor input, [[maybe_unused]] tensor weights, [[maybe_unused]] tensor bias, [[maybe_unused]] tensor stride, [[maybe_unused]] tensor padding, [[maybe_unused]] tensor dilation, [[maybe_unused]] tensor groups, [[maybe_unused]] tensor fused_clamp, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::conv2d_transpose([[maybe_unused]] pad_mode_t pad_mode, [[maybe_unused]] tensor input, [[maybe_unused]] tensor weights, [[maybe_unused]] tensor bias, [[maybe_unused]] tensor output_shape, [[maybe_unused]] tensor stride, [[maybe_unused]] tensor padding, [[maybe_unused]] tensor output_padding, [[maybe_unused]] tensor dilation, [[maybe_unused]] tensor groups, [[maybe_unused]] tensor fused_clamp, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::cum_sum([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor exclusive, [[maybe_unused]] tensor reverse, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::dequantize([[maybe_unused]] typecode_t target_type, [[maybe_unused]] tensor input, [[maybe_unused]] tensor dequant_param, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::elu([[maybe_unused]] tensor input, [[maybe_unused]] tensor alpha, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::expand([[maybe_unused]] tensor input, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::flatten([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::gather([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor index, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::gather_nd([[maybe_unused]] tensor input, [[maybe_unused]] tensor batch_dims, [[maybe_unused]] tensor index, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::get_item([[maybe_unused]] tensor input, [[maybe_unused]] tensor index, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::hard_sigmoid([[maybe_unused]] tensor input, [[maybe_unused]] tensor alpha, [[maybe_unused]] tensor beta, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::hard_swish([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::hardmax([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::instance_normalization([[maybe_unused]] tensor input, [[maybe_unused]] tensor scale, [[maybe_unused]] tensor bias, [[maybe_unused]] tensor epsilon, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::l2_normalization([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::leaky_relu([[maybe_unused]] tensor input, [[maybe_unused]] tensor alpha, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::log_softmax([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::lp_normalization([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor p, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::lrn([[maybe_unused]] tensor input, [[maybe_unused]] tensor alpha, [[maybe_unused]] tensor beta, [[maybe_unused]] tensor bias, [[maybe_unused]] tensor size, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::lstm([[maybe_unused]] lstmdirection_t direction, [[maybe_unused]] lstmlayout_t layout, [[maybe_unused]] std::vector<std::string> activations, [[maybe_unused]] tensor x, [[maybe_unused]] tensor w, [[maybe_unused]] tensor r, [[maybe_unused]] tensor b, [[maybe_unused]] tensor sequence_lens, [[maybe_unused]] tensor initial_h, [[maybe_unused]] tensor initial_c, [[maybe_unused]] tensor p, [[maybe_unused]] tensor activation_alpha, [[maybe_unused]] tensor activation_beta, [[maybe_unused]] tensor clip, [[maybe_unused]] tensor hidden_size, [[maybe_unused]] tensor input_forget, [[maybe_unused]] tensor output_size, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::mat_mul([[maybe_unused]] tensor lhs, [[maybe_unused]] tensor rhs, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::normal([[maybe_unused]] typecode_t type, [[maybe_unused]] tensor mean, [[maybe_unused]] tensor scale, [[maybe_unused]] tensor seed, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::normal_like([[maybe_unused]] typecode_t type, [[maybe_unused]] tensor input, [[maybe_unused]] tensor mean, [[maybe_unused]] tensor scale, [[maybe_unused]] tensor seed, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::one_hot([[maybe_unused]] one_hot_mode_t one_hot_mode, [[maybe_unused]] tensor indices, [[maybe_unused]] tensor depth, [[maybe_unused]] tensor values, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor on_value, [[maybe_unused]] tensor off_value, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::pad([[maybe_unused]] pad_mode_t pad_mode, [[maybe_unused]] tensor input, [[maybe_unused]] tensor pads, [[maybe_unused]] tensor value, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::prelu([[maybe_unused]] tensor input, [[maybe_unused]] tensor slope, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::prod([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::quant_param_of([[maybe_unused]] quant_mode_t quant_mode, [[maybe_unused]] tensor range, [[maybe_unused]] tensor bits, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::quantize([[maybe_unused]] typecode_t target_type, [[maybe_unused]] tensor input, [[maybe_unused]] tensor quant_param, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::range([[maybe_unused]] tensor begin, [[maybe_unused]] tensor end, [[maybe_unused]] tensor step, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::range_of([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::reduce([[maybe_unused]] reduce_op_t reduce_op, [[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor init_value, [[maybe_unused]] tensor keep_dims, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::reduce_arg([[maybe_unused]] reduce_arg_op_t reduce_arg_op, [[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor keep_dims, [[maybe_unused]] tensor select_last_index, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::reduce_window2d([[maybe_unused]] reduce_op_t reduce_op, [[maybe_unused]] tensor input, [[maybe_unused]] tensor init_value, [[maybe_unused]] tensor filter, [[maybe_unused]] tensor stride, [[maybe_unused]] tensor padding, [[maybe_unused]] tensor dilation, [[maybe_unused]] tensor ceil_mode, [[maybe_unused]] tensor count_include_pad, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::relu([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::relu6([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::require([[maybe_unused]] std::string message, [[maybe_unused]] tensor predicate, [[maybe_unused]] tensor value, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::reshape([[maybe_unused]] tensor input, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::resize_image([[maybe_unused]] image_resize_mode_t resize_mode, [[maybe_unused]] image_resize_transformation_mode_t transformation_mode, [[maybe_unused]] image_resize_nearest_mode_t nearest_mode, [[maybe_unused]] bool is_tfresize, [[maybe_unused]] tensor input, [[maybe_unused]] tensor roi, [[maybe_unused]] tensor new_size, [[maybe_unused]] tensor cubic_coeff_a, [[maybe_unused]] tensor exclude_outside, [[maybe_unused]] tensor extrapolation_value, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::reverse_sequence([[maybe_unused]] tensor input, [[maybe_unused]] tensor seq_lens, [[maybe_unused]] tensor batch_axis, [[maybe_unused]] tensor time_axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::select([[maybe_unused]] tensor predicate, [[maybe_unused]] tensor true_value, [[maybe_unused]] tensor false_value, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::selu([[maybe_unused]] tensor input, [[maybe_unused]] tensor alpha, [[maybe_unused]] tensor gamma, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::shape_of([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::sigmoid([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::size_of([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::slice([[maybe_unused]] tensor input, [[maybe_unused]] tensor begins, [[maybe_unused]] tensor ends, [[maybe_unused]] tensor axes, [[maybe_unused]] tensor strides, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::softmax([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::softplus([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::softsign([[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::space_to_batch([[maybe_unused]] tensor input, [[maybe_unused]] tensor block_shape, [[maybe_unused]] tensor paddings, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::split([[maybe_unused]] tensor input, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor sections, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::squeeze([[maybe_unused]] tensor input, [[maybe_unused]] tensor dim, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::stack([[maybe_unused]] tensor inputs, [[maybe_unused]] tensor axis, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::tile([[maybe_unused]] tensor input, [[maybe_unused]] tensor repeats, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::transpose([[maybe_unused]] tensor input, [[maybe_unused]] tensor perm, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::unary([[maybe_unused]] unary_op_t unary_op, [[maybe_unused]] tensor input, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::uniform([[maybe_unused]] typecode_t type, [[maybe_unused]] tensor high, [[maybe_unused]] tensor low, [[maybe_unused]] tensor seed, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::uniform_like([[maybe_unused]] typecode_t type, [[maybe_unused]] tensor input, [[maybe_unused]] tensor high, [[maybe_unused]] tensor low, [[maybe_unused]] tensor seed, [[maybe_unused]] tensor shape, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::unsqueeze([[maybe_unused]] tensor input, [[maybe_unused]] tensor dim, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}

result<tensor> nncase::kernels::stackvm::where([[maybe_unused]] tensor cond, [[maybe_unused]] tensor x, [[maybe_unused]] tensor y, [[maybe_unused]] tensor output, [[maybe_unused]] kernel_context &context) {
    return err(std::errc::not_supported);
}
