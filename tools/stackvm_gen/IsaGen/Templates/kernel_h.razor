@using IsaGen
@inherits RazorLight.TemplatePage<IsaExtractor>
@{ DisableEncoding = true;
    string HexTemplate(uint value, uint length)
    {
        var hexForamt = $"X{(int)Math.Ceiling(length / 4f)}";
        return $"0x{value.ToString(hexForamt)}";
    } }
/* This file is generated by tools/stackvm_gen/IsaGen at @Raw(DateTimeOffset.Now.ToString()).
 *
 * Copyright 2019-2021 Canaan Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#pragma once
#include <nncase/kernels/kernel_context.h>
#include <nncase/runtime/datatypes.h>
#include <nncase/runtime/error.h>
#include <nncase/runtime/result.h>
#include <nncase/runtime/stackvm/opcode.h>
#include <nncase/tensor.h>
#include <nncase/value.h>

BEGIN_NS_NNCASE_KERNELS_MODULE(stackvm)
@foreach (var inst in Model.TensorInstructions.SelectMany(x => x.Value).OrderBy(x => x.CppName))
{
    var name = inst.CppName.ToLowerInvariant().Replace('.', '_');
@:
@:NNCASE_API result<tensor> @(name)(@string.Join(", ", inst.Fields.Where(x => !x.IsOpCode && x.CppName != "tensor_funct").Select(x => $"{(x.IsEnum && x.CppType != "typecode_t" ? "runtime::stackvm::" + x.CppType : x.CppType)} {x.CppName}").Concat(inst.Inputs.Select(x => $"{x.CppType} {x.CppName}").Concat(new[]{"tensor output = nullptr", "kernel_context &context = default_kernel_context()"}))));
}

END_NS_NNCASE_KERNELS_MODULE
